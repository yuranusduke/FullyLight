% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{Fit}
\alias{Fit}
\title{Function to train FullyLight model instance}
\usage{
Fit(
  x,
  y,
  models,
  compile_funcs,
  validation_rate = 0,
  validation_data = NULL,
  epochs = 20,
  batch_size = 32,
  verbose = 1,
  shuffle = T,
  isimage = F,
  data_name = NULL,
  output = F
)
}
\arguments{
\item{x}{matrix. Input design matrix, shape: m, input_dim.}

\item{y}{matrix. One-hot form of labels, shape: m, num_classes.}

\item{models}{'Model' instance.}

\item{compile_funcs}{All compiled functions from \code{FullyLight::Compile}.}

\item{validation_rate}{numeric. Validation split, default is 0.0.}

\item{validation_data}{list. Validation data, in tuple list(x =, y = ), default is NULL.}

\item{epochs}{numeric. Training epochs, default is 20.}

\item{batch_size}{numeric. Training batch size, default is 32.}

\item{verbose}{numeric. 1 as default for printing training history, 0 does not print.}

\item{shuffle}{bool. Default is TRUE shuffling data before each epoch.}

\item{isimage}{bool. Default is False for not using image as data.}

\item{data_name}{character string. Data set name, default is NULL.}

\item{output}{bool. Default is FALSE, TRUE for shiny output.}
}
\value{
History of learning, including training loss and metric for each learning step and trained model, etc..
}
\description{
Function will call engine of all inside functions to start training FullyLight model,
one may put return into \code{FullyLight::Evaluate} function.
}
\examples{
x <- matrix(c(3, 7, 9, 10, 0, 9), nrow = 2)
y <- matrix(c(0, 1, 0, 1, 0, 0), nrow = 2, byrow = TRUE)
models <- FullyLight::Model(dims = c(3, 10, 3),
                            input_shape = 3,
                            hidden_activation = 'relu',
                            out_activation = 'softmax',
                            kernel_initializer = 'random',
                            l1 = 0,
                            l2 = 0)
compile_funcs <- FullyLight::Compile(loss = 'categorical_crossentropy',
                                     optimizer = 'adam',
                                     metric = 'f1',
                                     learning_rate = 1e-3,
                                     l1 = 0,
                                     l2 = 0)
res <- Fit(x = x,
           y = y,
           models = models,
           compile_funcs = compile_funcs,
           validation_rate = 0.01,
           validation_data = NULL,
           epochs = 1,
           batch_size = 32,
           verbose = 1,
           shuffle = TRUE,
           isimage = FALSE,
           data_name = 'iris')
}
\author{
Kunhong Yu
}
